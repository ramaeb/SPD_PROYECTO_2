#define B 13
#define A 12
#define G 10
#define F 11
#define E 9
#define D 8
#define C 7
#define PUL_SUMAR 5
#define PUL_RESTAR 4
#define SWITCH_PRIMO 3
#define GND_UNI A4
#define GND_DEC A5
int cont = 0;
bool hayprimo = false;

//Funcion que verifica el numero si es primo.
bool es_primo(int num){
  if (num == 0 || num == 1 ||  num == 4){
  	return false;
  }
  if (num == 3) {
        return true;   // 2 y 3 son primos
  }
  if (num == 2)
  {
	return true;  // 2 y 3 son primos
  }
  if (num % 2 == 0 || num % 3 == 0) {
        return false;  // saca los multiplos de 2 y 3, si es 0 retorna falso
  }
  for (int x = 2; x < num / 2; x++) {
    if (num % x == 0) return false;
  }
  // Si no se pudo dividir por ninguno de los de arriba, sí es primo
  return true;
}
//SACA LA DECENA DEL CONTADOR Y LA MUESTRA
int cuentaDispDec(int num){
  
  int dispDec = (num/10)%10;
  muestraDisplay(dispDec);
}

//SACA LA UNIDAD DEL CONTADOR Y LA MUESTRA
int cuentaDispUnidad(int num){
  
  int dispUni = num%10;
  muestraDisplay(dispUni);
}

//Muestra digito en display
  int muestraDisplay(int numero) {
    switch(numero) {
      
      case 0:
            digitalWrite(A,HIGH);
            digitalWrite(B,HIGH);
            digitalWrite(C,HIGH);
            digitalWrite(D,HIGH);
            digitalWrite(E,HIGH);
            digitalWrite(F,HIGH);
            digitalWrite(G,LOW);
         break;
       case 1:
      	 digitalWrite(A,LOW);
         digitalWrite(B,HIGH);
         digitalWrite(C,HIGH);
         digitalWrite(D,LOW);
         digitalWrite(E,LOW);
         digitalWrite(F,LOW);
         digitalWrite(G,LOW);
      
 
         break; 
       case 2:
         digitalWrite(A,HIGH);
         digitalWrite(B,HIGH);
         digitalWrite(C,LOW);
         digitalWrite(D,HIGH);
         digitalWrite(E,HIGH);
         digitalWrite(F,LOW);
         digitalWrite(G,HIGH);
         break;
       case 3:
         digitalWrite(A,HIGH);
         digitalWrite(B,HIGH);
         digitalWrite(C,HIGH);
         digitalWrite(D,HIGH);
         digitalWrite(E,LOW);
         digitalWrite(F,LOW);
         digitalWrite(G,HIGH);
         break;
       case 4:
         digitalWrite(A,LOW);
         digitalWrite(B,HIGH);
         digitalWrite(C,HIGH);
         digitalWrite(D,LOW);
         digitalWrite(E,LOW);
         digitalWrite(F,HIGH);
         digitalWrite(G,HIGH);
         break;
       case 5:
         digitalWrite(A,HIGH);
         digitalWrite(B,LOW);
         digitalWrite(C,HIGH);
         digitalWrite(D,HIGH);
         digitalWrite(E,LOW);
         digitalWrite(F,HIGH);
         digitalWrite(G,HIGH);
         break;
       case 6:
         digitalWrite(A,HIGH);
         digitalWrite(B,LOW);
         digitalWrite(C,HIGH);
         digitalWrite(D,HIGH);
         digitalWrite(E,HIGH);
         digitalWrite(F,HIGH);
         digitalWrite(G,HIGH);
         break;
       case 7:
         digitalWrite(A,HIGH);
         digitalWrite(B,HIGH);
         digitalWrite(C,HIGH);
         digitalWrite(D,LOW);
         digitalWrite(E,LOW);
         digitalWrite(F,LOW);
         digitalWrite(G,LOW);
         break;
       case 8:
         digitalWrite(A,HIGH);
         digitalWrite(B,HIGH);
         digitalWrite(C,HIGH);
         digitalWrite(D,HIGH);
         digitalWrite(E,HIGH);
         digitalWrite(F,HIGH);
         digitalWrite(G,HIGH);
         break;
       case 9:
         digitalWrite(A,HIGH);
         digitalWrite(B,HIGH);
         digitalWrite(C,HIGH);
         digitalWrite(D,LOW);
         digitalWrite(E,LOW);
         digitalWrite(F,HIGH);
         digitalWrite(G,HIGH);
         break; 
   	   }
  
  	}

void setup()
{
//SETEO DE PINES
  Serial.begin(9600);
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(PUL_SUMAR, INPUT_PULLUP);
  pinMode(SWITCH_PRIMO, INPUT_PULLUP);
  pinMode(PUL_RESTAR, INPUT_PULLUP);
  pinMode(GND_DEC, OUTPUT);
  pinMode(GND_UNI, OUTPUT);
  

}


void loop()
{
  
  //LEE EL PULSADOR Y SI ES PULSADO ESPERA A QUE SE SUELTE
  //LUEGO REALIZA EL AUMENTO DEL CONTADOR
  if (digitalRead(SWITCH_PRIMO) == 0)
  {
     if (digitalRead(PUL_SUMAR) == 0)
    {
    

      while(!digitalRead(PUL_SUMAR))
      {
        //ANTI REBOTE DE SUMA, 
        //ALTERNA APAGADO Y ENCENDIDO DE LOS DOS DISPLAYS
        
         cuentaDispUnidad(cont);
         digitalWrite(GND_UNI,LOW);
         delay(10);
         digitalWrite(GND_UNI,HIGH);
         cuentaDispDec(cont);
         digitalWrite(GND_DEC,LOW);
         delay(10);
         digitalWrite(GND_DEC,HIGH);

      }
      cont++;
      //Si el contador llega a más de 99 lo setea a 0 de nuevo
      if (cont > 99)
      {
          cont = 0;
      }
    }
   
  }
    
    
    else
    {
      //CUENTA NUMEROS PRIMOS CON EL BOTÓN SUMAR.
      for(cont=2;cont<=99; cont++)
      {
        //Si el switch es accionado, vuelve al modo contador.
        if (digitalRead(SWITCH_PRIMO) == 0) 
        {
          cont = 0;
          break;
        }
         delay(50);
       //Mientras detecte un numero primo lo mantiene en el display.  
         while(es_primo(cont))
         {
           if (digitalRead(SWITCH_PRIMO) == 0) 
                 {
                   cont = 0;
                   digitalWrite(GND_UNI,LOW);
                   delay(10);
                   digitalWrite(GND_UNI,HIGH);
                   cuentaDispDec(cont);
                   digitalWrite(GND_DEC,LOW);
                   delay(10);
                   digitalWrite(GND_DEC,HIGH);
                   break;
                 }
           if(digitalRead(PUL_SUMAR) == 0)
           {
         //ANTI REBOTE DE SUMA,
             while(!digitalRead(PUL_SUMAR))
              {
         //ALTERNA APAGADO Y ENCENDIDO DE LOS DOS DISPLAYS
                 cuentaDispUnidad(cont);
                 digitalWrite(GND_UNI,LOW);
                 delay(10);
                 digitalWrite(GND_UNI,HIGH);
                 cuentaDispDec(cont);
                 digitalWrite(GND_DEC,LOW);
                 delay(10);
                 digitalWrite(GND_DEC,HIGH);
                 
      		   }
               break;
         	  }
       //ALTERNA APAGADO Y ENCENDIDO DE LOS DOS DISPLAYS
           cuentaDispUnidad(cont);
           digitalWrite(GND_UNI,LOW);
           delay(10);
           digitalWrite(GND_UNI,HIGH);
           cuentaDispDec(cont);
           digitalWrite(GND_DEC,LOW);
           delay(10);
           digitalWrite(GND_DEC,HIGH);
         }
 
      }
      
   	
      
    }
  
  //DECREMENTO DEL CONTADOR
  //LEE EL PULSADOR Y SI ES PULSADO ESPERA A QUE SE SUELTE
  //LUEGO REALIZA EL DECREMENTO DEL CONTADOR
  if (digitalRead(PUL_RESTAR) == 0){
    while(!digitalRead(PUL_RESTAR)){//ANTI REBOTE DE SUMA
       cuentaDispUnidad(cont);
  	   digitalWrite(GND_UNI,LOW);
       delay(10);
  	   digitalWrite(GND_UNI,HIGH);
  	   cuentaDispDec(cont);
  	   digitalWrite(GND_DEC,LOW);
  	   delay(10);
  	   digitalWrite(GND_DEC,HIGH);
    
    }
   //SI EL CONTADOR LLEGA A MENOS QUE 99 SETEA A 0
    cont--;
    if (cont < 0){
    	cont = 99;
    }
  }
  //ALTERNA APAGADO Y ENCENDIDO DE LOS DOS DISPLAYS
  if (digitalRead(SWITCH_PRIMO) == 0)
  {
    cuentaDispUnidad(cont);
    digitalWrite(GND_UNI,LOW);
    delay(10);
    digitalWrite(GND_UNI,HIGH);
    cuentaDispDec(cont);
    digitalWrite(GND_DEC,LOW);
    delay(10);
    digitalWrite(GND_DEC,HIGH);
  }
  
}
